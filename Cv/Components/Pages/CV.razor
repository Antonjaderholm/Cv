@page "/cv"
@using Cv.Models
@using Cv.Services
@inject ISkillService SkillService
@inject IProjectService ProjectService
@implements IDisposable

<div class="hero-section">
    <div class="profile-image">
        <img src="" alt="Anton Jäderholm" />
    </div>
    <h1 class="name">Anton Jäderholm</h1>
    <p class="title">Cloud/DevOps Engineer | Software Engineer</p>
</div>

<div class="about-section">
    <h2>About Me</h2>
    <p class="bio">Passionate software developer with a focus on creating efficient and scalable solutions. Driven by continuous learning and technological innovation.</p>
</div>

<div class="skills-section">
    <h2>Core Skills</h2>
    <div class="skills-grid">
        @foreach (var skill in skills)
        {
            <SkillCard Skill="skill" />
        }
    </div>
</div>

<div class="projects-section">
    <h2>Featured Projects</h2>
    <div class="project-grid">
        @foreach (var project in projects)
        {
            <ProjectCard Project="project" />
        }
    </div>
</div>

<div class="contact-section">
    <h2>Connect</h2>
    <div class="social-links">
        <a href="https://github.com/Antonjaderholm" target="_blank" class="social-link">GitHub</a>
        <a href="https://www.linkedin.com/in/anton-j%C3%A4derholm-a6b00b289/" target="_blank" class="social-link">LinkedIn</a>
    </div>
</div>

@code {
    private List<Skill> skills = new();
    private List<Project> projects = new();
    private Timer _refreshTimer;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
        SetupRefreshTimer();
    }

    private void SetupRefreshTimer()
    {
        _refreshTimer = new Timer(async _ =>
        {
            await LoadData();
            await InvokeAsync(StateHasChanged);
        }, null, 0, 5000);
    }

    private async Task LoadData()
    {
        skills = await SkillService.GetSkillsAsync();
        projects = await ProjectService.GetProjectsAsync();
    }

    public void Dispose()
    {
        _refreshTimer?.Dispose();
    }
}